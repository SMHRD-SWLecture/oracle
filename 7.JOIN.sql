/************************* JOIN *************************/

-- 직원ID가 100인 직원의 부서이름을 출력하시오.
-- 직원 ID -> 직원테이블
-- 부서 이름 -> 부서테이블

SELECT E.EMPLOYEE_ID, D.DEPARTMENT_NAME
    FROM EMPLOYEES E,
         DEPARTMENTS D
 WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
    AND EMPLOYEE_ID = 100;
    
SELECT DEPARTMENT_ID
    FROM EMPLOYEES E,
         DEPARTMENTS D;
-- ORA-00918: column ambiguously defined
-- "E, D 둘 다 DEPARTMENT_ID 있는데 그 중 뭘로 가져올꺼야?" 라는 의미

-- 다만, 한 테이블에만 있는 column이라면 별칭 없이도 사용 가능

-- 1. CROSS JOIN
-- 직원테이블 108 * 부서테이블 27 = 2916행 생성
SELECT EMPLOYEE_ID, E.DEPARTMENT_ID, DEPARTMENT_NAME
    FROM EMPLOYEES E, 
         DEPARTMENTS D;
         
-- 2. INNER JOIN
-- 직원ID가 114인 직원의 직원ID, 부서ID, 부서이름을 출력하시오.
SELECT EMPLOYEE_ID, E.DEPARTMENT_ID, DEPARTMENT_NAME
    FROM EMPLOYEES E, DEPARTMENTS D
 WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
    AND EMPLOYEE_ID = 114;

-- 1. WHERE 조건절로 INNER JOIN 하기(ORACLE)
SELECT EMPLOYEE_ID, E.DEPARTMENT_ID, DEPARTMENT_NAME
    FROM EMPLOYEES E, DEPARTMENTS D
 WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
 ORDER BY 1;
 
-- 2. ANSI 문법으로 작성
/* 
    SELECT 컬럼
     FROM A테이블 INNER JOIN B테이블
      ON(조인조건);

    만약 조건이 두개라면 ON 괄호 안에 AND로 조건을 나열한다.
*/

-- 모든 직원의 부서명을 출력
SELECT EMPLOYEE_ID, E.DEPARTMENT_ID, DEPARTMENT_NAME
    FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
     ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);

-- 조건 하나 추가!
SELECT EMPLOYEE_ID, E.DEPARTMENT_ID, DEPARTMENT_NAME
    FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
     ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID AND D.DEPARTMENT_ID = 90);
     
-- ** 실습
-- 직원(EMPLOYEES) 테이블과 직업(JOBS) 테이블을 INNER JOIN을 사용해서
-- 직원ID, 직업ID, 직업의 TITLE을 출력
-- 단, 오라클 문법과 ANSI 문법을 둘 다 사용

-- ORACLE 문법
SELECT EMPLOYEE_ID, E.JOB_ID, JOB_TITLE
    FROM EMPLOYEES E, JOBS J
 WHERE E.JOB_ID = J.JOB_ID;
 
-- ANSI 문법
SELECT EMPLOYEE_ID, E.JOB_ID, JOB_TITLE
    FROM EMPLOYEES E INNER JOIN JOBS J
     ON (E.JOB_ID = J.JOB_ID);


-- 3. OUTER JOIN

-- LEFT OUTER JOIN
SELECT EMPLOYEE_ID, E.DEPARTMENT_ID, DEPARTMENT_NAME 
  FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D
    ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);
-- 결과 : 108행, 직원 테이블을 기준으로 OUTER JOIN -> 직원 테이블에 있는 모든 값 출력
-- 부서ID가 NULL인 직원들도 다 포함되어서 출력

-- RIGHT OUTER JOIN
SELECT EMPLOYEE_ID, E.DEPARTMENT_ID, DEPARTMENT_NAME 
  FROM EMPLOYEES E RIGHT OUTER JOIN DEPARTMENTS D
    ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);
-- 결과 : 122행, 부서 테이블을 기준으로 OUTER JOIN -> 부서 테이블에 있는 모든 값 출력
-- 직원이 아직 없는 부서들까지 다 포함되어서 출력

-- FULL OUTER JOIN
SELECT EMPLOYEE_ID, E.DEPARTMENT_ID, DEPARTMENT_NAME 
  FROM EMPLOYEES E FULL OUTER JOIN DEPARTMENTS D
    ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);

-- 오라클 문법
-- OUTER JOIN을 하고 싶은 쪽 반대 테이블에 (+)를 붙여주면 됨
SELECT EMPLOYEE_ID, E.DEPARTMENT_ID, DEPARTMENT_NAME
    FROM EMPLOYEES E, DEPARTMENTS D
 WHERE E.DEPARTMENT_ID (+) = D.DEPARTMENT_ID;
 

------------------------- 실습 ------------------------- 
-- 직원 테이블 : EMPLOYEES / 직업 테이블 : JOBS / 

-- (1) 직원 테이블과 직업 테이블을 INNER JOIN을 사용해서 직원ID, 직업ID, 직업TITLE 출력
-- ORACLE문법, ANSI 문법 둘 다 사용!

-- ORACLE
SELECT EMPLOYEE_ID, E.JOB_ID, JOB_TITLE
    FROM EMPLOYEES E, JOBS J
 WHERE E.JOB_ID = J.JOB_ID;
 
-- ANSI
SELECT EMPLOYEE_ID, E.JOB_ID, JOB_TITLE
    FROM EMPLOYEES E INNER JOIN JOBS J
     ON (E.JOB_ID = J.JOB_ID);


-- (2) 각 부서의 매니저 직원들을 출력
-- 부서테이블과 직원 테이블을 INNER JOIN을 사용해서 부서NAME, 매니저ID, 직원ID 출력
-- ORACLE문법, ANSI 문법 둘 다 사용!

-- ORACLE
SELECT DEPARTMENT_NAME, D.MANAGER_ID, EMPLOYEE_ID
    FROM DEPARTMENTS D, EMPLOYEES E
 WHERE D.MANAGER_ID = E.MANAGER_ID;
 
-- ANSI
SELECT DEPARTMENT_NAME, D.MANAGER_ID, EMPLOYEE_ID
    FROM DEPARTMENTS D INNER JOIN EMPLOYEES E
        ON (D.MANAGER_ID = E.MANAGER_ID);
 
-- (3) 
-- 각 부서의 매니저 직원들을 출력하되, 부서 테이블을 기준으로 LEFT OUTER JOIN을 사용해서 부서NAME, 매니저ID, 직원ID 출력
-- ORACLE문법, ANSI 문법 둘 다 사용!

-- ORACLE
SELECT DEPARTMENT_NAME, D.MANAGER_ID, EMPLOYEE_ID
 FROM DEPARTMENTS D, EMPLOYEES E
    WHERE D.MANAGER_ID = E.MANAGER_ID(+);

-- ANSI
SELECT DEPARTMENT_NAME, D.MANAGER_ID, EMPLOYEE_ID 
  FROM DEPARTMENTS D LEFT OUTER JOIN EMPLOYEES E
    ON (D.MANAGER_ID = E.MANAGER_ID);

-- (4) 
-- 각 부서의 매니저 직원들을 출력하되, 부서 테이블을 기준으로 RIGHT OUTER JOIN을 사용해서 부서NAME, 매니저ID, 직원ID 출력
-- ORACLE문법, ANSI 문법 둘 다 사용!

-- ORACLE
SELECT DEPARTMENT_NAME, D.MANAGER_ID, EMPLOYEE_ID
 FROM DEPARTMENTS D, EMPLOYEES E
    WHERE D.MANAGER_ID(+) = E.MANAGER_ID;

-- ANSI
SELECT DEPARTMENT_NAME, D.MANAGER_ID, EMPLOYEE_ID 
  FROM DEPARTMENTS D RIGHT OUTER JOIN EMPLOYEES E
    ON (D.MANAGER_ID = E.MANAGER_ID);

-- (5) 
-- 각 부서의 매니저 직원들을 출력하되, 부서 테이블을 기준으로 FULL OUTER JOIN을 사용해서 부서NAME, 매니저ID, 직원ID 출력

-- ANSI
SELECT DEPARTMENT_NAME, D.MANAGER_ID, EMPLOYEE_ID 
  FROM DEPARTMENTS D FULL OUTER JOIN EMPLOYEES E
    ON (D.MANAGER_ID = E.MANAGER_ID);
  
commit;